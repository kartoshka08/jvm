//Просмотрите код ниже и опишите (текстово или с картинками)
// каждую строку с точки зрения происходящего в JVM
//    Не забудьте упомянуть про:
//    - ClassLoader'ы,
//    - области памяти (стэк (и его фреймы), хип, метаспейс)
//    - сборщик мусора


public class JvmComprehension {
//Создался класс JvmComprehension в MetaSpace, c помощью системы подгрущика классов (ClassLoader)
// подгружается данный класс (пограмма его ищет с помощью Application ClassLoader, Platform ClassLoader или Boostrap ClassLoader)
    public static void main(String[] args) {
        int i = 1;                      // 1 Создание нового фрейма на стеке (Stack memory) для метода main
                                        //  выделилась память для интовой ячейки i, ей присвоено значение 1
        Object o = new Object();        // 2 Создание объекта класса Object (если тип класса не примитивный, то
                                        // мы создаем объект этого класса в куче (heap)) и ссылку на объект класса
                                        // Object o мы запоминаем на стеке
        Integer ii = 2;                 // 3 Создание объекта класса Integer, так же, на стеке запоминаем в выделенной
                                        // памяти значение для объекта этого класса (ii = 2)
        printAll(o, i, ii);             // 4  создание нового фрейма на стеке для метода printAll, куда мы передаем ссылки на объекты
        System.out.println("finished"); // 7 создание нового фрейма на стеке, куда передается ссылка на сообщение "finished"
    }

    private static void printAll(Object o, int i, Integer ii) {
        Integer uselessVar = 700;                   // 5 создание объекта класса Integer, на стеке запоминается его значение
        System.out.println(o.toString() + i + ii);  // 6 создание нового фрейма, куда мы передадим ссылки на наши объекты
    }
}
// Для так называемой сборки мусора и удаления неиспользуемых и лишних объектов можно использовать Stop The World - приостановка программы
// в данной порграмме лишним и ненужным объектом станет uselessVar.
